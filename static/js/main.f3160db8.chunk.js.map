{"version":3,"sources":["redux/selectors.js","redux/actionTypes.js","redux/action.js","components/TodoContent.js","components/App.js","redux/reducers/todos.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["selectTodos","store","todoState","todos","selectFilter","filterState","filter","ADD_TODO","DELETE_TODO","TOGGLE_TODO","SET_FILTER","CLEAR_COMPLETED_TODO","CardList","styled","div","Todo1","label","CardBody","Check","span","TodoText","p","props","completed","EditTodo","TodoContent","todo","dispatch","useDispatch","onClick","id","type","payload","name","icon","faTrashAlt","style","color","cursor","fontSize","margin","TodoList","CoverImg","Content","Add","form","Input","input","Todos","ul","Card","li","ButtonWrapper","Button","button","App","useState","value","setValue","useSelector","handleFilter","setFilter","onChange","e","target","placeholder","faPlus","preventDefault","trim","map","todoId","initialState","combineReducers","state","action","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","TitleWrapper","Top","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3160db8.chunk.js","sourcesContent":["export const selectTodos = (store) => store.todoState.todos;\nexport const selectFilter = (store) => store.filterState.filter;","export const ADD_TODO = \"add_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO = \"toggle_todo\";\nexport const EDIT_TODO = \"edit_todo\";\nexport const SET_FILTER = \"set_filter\";\nexport const CLEAR_COMPLETED_TODO = \"clear_completed_todo\";\n\n\n\n","import {ADD_TODO, DELETE_TODO, TOGGLE_TODO, EDIT_TODO, CLEAR_COMPLETED_TODO, SET_FILTER} from './actionTypes'\n\nexport function addTodo(name){\n    return {\n        type: ADD_TODO,\n        payload: {\n          name\n        }\n    }\n}\nexport function deleteTodo(id){\n    return {\n        type: DELETE_TODO,\n        payload: {\n          id\n        }\n    }\n}\nexport function editTodo(id, name){\n  return{\n    type: EDIT_TODO,\n    payload:{\n        id,\n        name\n    }\n  }\n}\nexport function toggleTodo(id){\n    return{\n    type: TOGGLE_TODO,\n    payload:{\n      id\n    }\n  }\n}\nexport function clearCompletedTodo(){\n    return{\n      type:CLEAR_COMPLETED_TODO\n    }\n}\nexport const setFilter = (filter) => (\n    {\n        type: SET_FILTER,\n        payload: {\n            filter\n        }\n    }\n)","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useDispatch} from 'react-redux'\r\nimport {deleteTodo, toggleTodo} from '../redux/action'\r\nimport { faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst CardList = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  user-select: none;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n`;\r\nconst Todo1 = styled.label`\r\n  color: #6c717b;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  border-radius: 3px;\r\n  display: inline-block;\r\n  padding: 5px 5px 5px 30px;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background-color: #f4f7fa;\r\n    color: #5ebec1;\r\n  }\r\n  &:active {\r\n    color: #5ebec1;\r\n  }\r\n`;\r\nconst CardBody = styled.div``;\r\nconst Check = styled.span`\r\n  left: 4px;\r\n  top: 50%;\r\n  position: absolute;\r\n  transform: translateY(-50%);\r\n  width: 18px;\r\n  height: 18px;\r\n  display: block;\r\n  background: white;\r\n  border-radius: 3px;\r\n  border: 2px solid #99d8d0;\r\n  box-shadow: 0 2px 3px #f0f4f8;\r\n`;\r\n\r\nconst TodoText = styled.p`\r\n  font-family: 'Nunito';\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n\r\n  ${(props) =>\r\n    props.completed &&\r\n    `\r\n      text-decoration: line-through;\r\n      color: #8db596;\r\n      opacity: 0.6;\r\n    `}\r\n`;\r\nconst EditTodo = styled.div`\r\n  width: 55px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nfunction TodoContent({todo}) {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <CardList>\r\n      <CardBody>\r\n        <Todo1\r\n          onClick={() => dispatch(toggleTodo(todo.id))}\r\n        >\r\n          <Check>{todo.completed ? \"âœ”\" : \"\"}</Check>\r\n          <TodoText completed={todo.completed}>{todo.name}</TodoText>\r\n        </Todo1>\r\n      </CardBody>\r\n      <EditTodo>\r\n       <FontAwesomeIcon\r\n         icon={faTrashAlt}\r\n         style={{\r\n            color: \"#cdc9c3\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"21px\",\r\n            margin: \"auto 0\",\r\n          }}\r\n          onClick={() => dispatch(deleteTodo(todo.id))}\r\n       />\r\n      </EditTodo>\r\n    </CardList>\r\n  );\r\n}\r\n\r\nexport default TodoContent;\r\n","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {selectTodos} from \"../redux/selectors\";\r\nimport {addTodo, setFilter, clearCompletedTodo} from '../redux/action'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TodoContent from \"./TodoContent\";\r\nimport { selectFilter } from '../redux/selectors';\r\nconst TodoList = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 320px;\r\n  height: 500px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  margin-bottom: 50px;\r\n  box-shadow: inset 0 -2px 2px 0 rgba(0, 0, 0, 0.2),\r\n    inset 2px 0 2px 0 rgba(0, 0, 0, 0.2), inset -2px 0 2px 0 rgba(0, 0, 0, 0.2),\r\n    inset 0 -2px 2px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0px #272a27;\r\n`;\r\nconst CoverImg = styled.div`\r\n  background: url(\"https://i.imgur.com/YcPaK24.jpg\");\r\n  height: 190px;\r\n  background-size: cover;\r\n  background-position: 10% 20%;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  position: relative;\r\n`;\r\nconst Content = styled.div`\r\n  padding: 10px 20px;\r\n`;\r\nconst Add = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  padding: 0 10px 0 5px;\r\n  border-bottom: 1px solid #d9e4dd;\r\n\r\n  & > * {\r\n    background: transparent;\r\n    border: none;\r\n    height: 35px;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #5ebec1;\r\n  outline: none;\r\n  width: 100%;\r\n  font-family: 'Nunito';\r\n  letter-spacing: 1px;\r\n  font-weight: bold;\r\n  opacity: 0.6;\r\n`;\r\nconst Todos = styled.ul`\r\n  margin-left: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  height: 220px;\r\n  overflow: auto;\r\n`;\r\nconst Card = styled.li`\r\n  user-select: none;\r\n  margin-bottom: 10px;\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst Button = styled.button`\r\n  padding: 4px 8px;\r\n  color: #07689f;\r\n  font-weight: bold;\r\n  background-color: #ffc93c;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-family: \"Nunito\";\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n\r\n  &:hover {\r\n    color:#aa3a3a;\r\n    background-color:#ffc93c;\r\n  }\r\n`;\r\nfunction App() {\r\n  const [value, setValue] = useState(\"\")\r\n  const filter = useSelector(selectFilter);\r\n  const todos = useSelector(selectTodos)\r\n  const dispatch = useDispatch()\r\n  const handleFilter = (filter) => () => {\r\n    dispatch(setFilter(filter));\r\n  };\r\n  return (\r\n    <TodoList>\r\n      <CoverImg></CoverImg>\r\n      <Content>\r\n      <Add>\r\n      <Input \r\n        value={value} \r\n        onChange={e => setValue(e.target.value)} \r\n        placeholder=\"Add something todo...\"/>\r\n      <FontAwesomeIcon\r\n        icon={faPlus} \r\n        style={{\r\n          color: \"#cdc9c3\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"21px\",\r\n        }}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          if (!value.trim()) return;\r\n          dispatch(addTodo(value))\r\n          setValue('')\r\n        }}\r\n      />\r\n      </Add>\r\n      <Todos>\r\n      <Card>\r\n       {todos\r\n         .filter((todo) => {\r\n           switch (filter) {\r\n            case 'all':\r\n             return true;\r\n            case 'Completed':\r\n             return todo.completed;\r\n            case 'active':\r\n             return !todo.completed;\r\n            default:\r\n             return true;\r\n            }\r\n          })\r\n         .map((todo) => (\r\n       <TodoContent\r\n         key={todo.id}\r\n         todo={todo}\r\n       />\r\n     ))}\r\n     </Card>\r\n     </Todos>\r\n     </Content>\r\n     <ButtonWrapper>\r\n        <Button onClick={handleFilter('all')}>All</Button>\r\n        <Button onClick={handleFilter('active')}>Active</Button>\r\n        <Button onClick={handleFilter('Completed')}>Completed</Button>\r\n        <Button onClick={() => dispatch(clearCompletedTodo())}>Clear</Button>\r\n     </ButtonWrapper>\r\n    </TodoList>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, CLEAR_COMPLETED_TODO } from \"../actionTypes\"\n\nlet todoId = 0\n\nconst initialState = {\n    todos: [],\n}\n\nexport default function todosReducer(state = initialState, action){\n    switch(action.type){\n      case ADD_TODO: {\n        return{\n          ...state,\n          todos:[...state.todos, {\n              id:todoId++,\n              name:action.payload.name,\n              completed: false\n          }]\n        }\n      }\n      case DELETE_TODO: {\n        return{\n          ...state,\n          todos:state.todos\n            .filter(todo => todo.id !== action.payload.id)\n        }\n      }\n      case TOGGLE_TODO: {\n        return{\n         ...state,\n         todos:state.todos\n           .map(todo => {\n             if (todo.id !== action.payload.id) return todo\n             return {\n                ...todo,\n                completed: !todo.completed\n             }\n          }) \n        }\n      }\n      case CLEAR_COMPLETED_TODO: {\n        return{\n          ...state,\n          todos: state.todos\n            .filter(todo => !todo.completed)\n        }\n      }\n      default: {\n          return state\n      }\n    }\n  }\n\n","import { SET_FILTER } from \"../actionTypes\"\n\nconst initialState = {\n    filter: 'all'\n}\n\nexport default function filterReducer(state = initialState, action){\n  if (action.type === SET_FILTER){\n        return{\n          ...state,\n          filter: action.payload.filter\n        }\n       }\n      return state;\n      }\n\n  \n","import {combineReducers} from \"redux\";\nimport todos from \"./todos\";\nimport filter from \"./filter\";\n\nexport default combineReducers({\n  todoState: todos,\n  filterState: filter\n})","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\n\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport styled from \"styled-components\";\r\nimport App from './components/App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: space-between;\r\n  padding: 8px 16px;\r\n  border: 1px solid #faeee7;\r\n  background-color: #faeee7;\r\n`;\r\nconst Top = styled.div`\r\n  color: #ea907a;\r\n  margin: 0 auto;\r\n  font-size: 35px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #2d6187;\r\n`;\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <TitleWrapper>\r\n      <Top>Todolist</Top>\r\n      </TitleWrapper>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}